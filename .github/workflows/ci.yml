name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ecommercedb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up Docker
      run: docker-compose -f docker/docker-compose.yml up -d

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..30}; do
          if docker-compose -f docker/docker-compose.yml exec postgres pg_isready -U user; then
            break
          fi
          sleep 1
        done

    - name: Wait for RabbitMQ to be ready
      run: |
        for i in {1..30}; do
          if curl -s -u guest:guest http://localhost:15672/api/overview; then
            break
          fi
          sleep 1
        done

    - name: Build and test with Maven
      run: mvn clean install

    - name: Run tests
      run: mvn test
